{"ast":null,"code":"var _jsxFileName = \"/Users/briana/workspace/employee-directory-web/client/src/Components/List.js\";\nimport React, { Component } from 'react'; // Internal Routes\n\nimport Employee from './Employee';\nimport '../App.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.onEdit = this.props.onEdit.bind(this);\n    this.chooseRenderObject = this.chooseRenderObject.bind(this);\n  }\n\n  chooseRenderObject() {\n    const employeeList = '{ \\\n      this.props.list.length > 0 ? ( \\\n        this.props.list.map(employee => { \\\n          return ( \\\n            <Employee \\\n               key={employee.id} \\\n               id={employee.id} \\\n               name={employee.name} \\\n               email={employee.email} \\\n               phone={employee.phone} \\\n               image={employee.image} \\\n               position={employee.position} \\\n               locations={this.props.locations} \\\n               getAllEmployees={this.props.getAllEmployees} \\\n               onEditSubmit={this.props.onEdit} \\\n            /> \\\n          ) \\\n        })              { \\\n                        this.props.list.length > 0 ? ( \\\n                          this.props.list.map(employee => { \\\n                            return ( \\\n                              <Employee \\\n                                 key={employee.id} \\\n                                 id={employee.id} \\\n                                 name={employee.name} \\\n                                 email={employee.email} \\\n                                 phone={employee.phone} \\\n                                 image={employee.image} \\\n                                 position={employee.position} \\\n                                 locations={this.props.locations} \\\n                                 getAllEmployees={this.props.getAllEmployees} \\\n                                 onEditSubmit={this.props.onEdit} \\\n                              /> \\\n                            ) \\\n                          }) \\\n                        ) : \\\n                        (<div className=\"employees\"> \\\n                          <h4> There are no {this.props.category}</h4> \\\n                        </div>) \\\n                      } \\\n      ) : \\\n      (<div className=\"employees\"> \\\n        <h4> There are no {this.props.category}</h4> \\\n      </div>';\n    return employeeList;\n  }\n\n  render() {\n    if (this.props.category === 'Employees') {\n      return React.createElement(\"div\", {\n        className: \"app-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Listing \", this.props.category)), React.createElement(\"div\", {\n        className: \"employees\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.chooseRenderObject())));\n    } else if (this.props.category === 'Departments') {\n      return React.createElement(\"div\", {\n        className: \"app-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Listing \", this.props.category)), React.createElement(\"div\", {\n        className: \"employees\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.props.list.length > 0 ? this.props.list.map(item => {\n        return React.createElement(\"div\", {\n          className: \"department\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, item));\n      }) : React.createElement(\"div\", {\n        className: \"employees\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" There are no Departments\")))));\n    } else if (this.props.category === 'Locations') {\n      return React.createElement(\"div\", {\n        className: \"app-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Listing \", this.props.category)), React.createElement(\"div\", {\n        className: \"employees\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.props.list.length > 0 ? this.props.list.map(item => {\n        return React.createElement(\"div\", {\n          className: \"location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"location-image\",\n          src: item.image,\n          alt: item.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, item.name), React.createElement(\"span\", {\n          className: \"location-detail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\"));\n      }) : React.createElement(\"div\", {\n        className: \"employees\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" There are no Locations\")))));\n    }\n  }\n\n}\n\n;\nexport default List;","map":{"version":3,"sources":["/Users/briana/workspace/employee-directory-web/client/src/Components/List.js"],"names":["React","Component","Employee","List","constructor","props","onEdit","bind","chooseRenderObject","employeeList","render","category","list","length","map","item","image","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// Internal Routes\nimport Employee from './Employee';\nimport '../App.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n     this.onEdit = this.props.onEdit.bind(this);\n     this.chooseRenderObject = this.chooseRenderObject.bind(this);\n  };\n\n  chooseRenderObject() {\n    const employeeList =\n    '{ \\\n      this.props.list.length > 0 ? ( \\\n        this.props.list.map(employee => { \\\n          return ( \\\n            <Employee \\\n               key={employee.id} \\\n               id={employee.id} \\\n               name={employee.name} \\\n               email={employee.email} \\\n               phone={employee.phone} \\\n               image={employee.image} \\\n               position={employee.position} \\\n               locations={this.props.locations} \\\n               getAllEmployees={this.props.getAllEmployees} \\\n               onEditSubmit={this.props.onEdit} \\\n            /> \\\n          ) \\\n        })              { \\\n                        this.props.list.length > 0 ? ( \\\n                          this.props.list.map(employee => { \\\n                            return ( \\\n                              <Employee \\\n                                 key={employee.id} \\\n                                 id={employee.id} \\\n                                 name={employee.name} \\\n                                 email={employee.email} \\\n                                 phone={employee.phone} \\\n                                 image={employee.image} \\\n                                 position={employee.position} \\\n                                 locations={this.props.locations} \\\n                                 getAllEmployees={this.props.getAllEmployees} \\\n                                 onEditSubmit={this.props.onEdit} \\\n                              /> \\\n                            ) \\\n                          }) \\\n                        ) : \\\n                        (<div className=\"employees\"> \\\n                          <h4> There are no {this.props.category}</h4> \\\n                        </div>) \\\n                      } \\\n      ) : \\\n      (<div className=\"employees\"> \\\n        <h4> There are no {this.props.category}</h4> \\\n      </div>';\n    return employeeList;\n  }\n\n  render() {\n  if (this.props.category === 'Employees') {\n    return (\n      <div className=\"app-body\">\n        <div className=\"container\">\n          <div className=\"header\">\n            <h2>Listing {this.props.category}</h2>\n          </div>\n            <div className=\"employees\">\n              {this.chooseRenderObject()}\n              </div>\n          </div>\n        </div>\n      );\n    } else if(this.props.category === 'Departments') {\n      return (\n        <div className=\"app-body\">\n          <div className=\"container\">\n            <div className=\"header\">\n              <h2>Listing {this.props.category}</h2>\n            </div>\n            <div className=\"employees\">\n              {\n                this.props.list.length > 0 ? (\n                  this.props.list.map(item => {\n                    return (\n                      <div className=\"department\">\n                            <h3>{item}</h3>\n                      </div>\n                    );\n                  })\n                ) :\n                (\n                  <div className=\"employees\">\n                    <h4> There are no Departments</h4>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n      } else if(this.props.category === 'Locations'){\n        return (\n          <div className=\"app-body\">\n            <div className=\"container\">\n              <div className=\"header\">\n                <h2>Listing {this.props.category}</h2>\n              </div>\n              <div className=\"employees\">\n                {\n                  this.props.list.length > 0 ? (\n                    this.props.list.map(item => {\n                      return (\n                        <div className=\"location\">\n                          <img className=\"location-image\" src={item.image} alt={item.name} />\n                            <h3>{item.name}</h3>\n                            <span className=\"location-detail\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                               Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</span>\n                        </div>\n                      );\n                    })\n                  ) :\n                  (\n                    <div className=\"employees\">\n                      <h4> There are no Locations</h4>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          );\n      }\n    }\n  };\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}