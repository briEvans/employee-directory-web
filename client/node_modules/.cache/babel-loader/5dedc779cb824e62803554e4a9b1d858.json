{"ast":null,"code":"var _jsxFileName = \"/Users/briana/workspace/employee-directory-web/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"; // Internal js imports\n\nimport Header from './Components/Header';\nimport Base from './Components/Base';\nimport List from './Components/List'; // Internal style imports\n\nimport './App.scss'; // TODO: include department support in API\n\nconst currDepartments = ['Department 1', 'Department 2', 'Department 3'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: [],\n      locations: [],\n      departments: [],\n      isLoaded: false\n    };\n    this.getAllEmployees = this.getAllEmployees.bind(this);\n    this.getAllLocations = this.getAllLocations.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllEmployees();\n    this.getAllLocations();\n    this.setState({\n      loaded: true,\n      departments: currDepartments\n    });\n  }\n  /* {@func} getAllEmployees - fetches list of employees and updates the state\n   * @return {Object} Array of objects\n   */\n\n\n  getAllEmployees() {\n    return fetch('/api/employees').then(res => res.json()).then(json => {\n      this.setState({\n        employees: json.data\n      });\n      return json.data;\n    }).catch(error => console.error('Error:', error));\n  }\n\n  /* {@func} getAllLocations - fetches list of office locations and updates the state\n   * @return {Object} Array of objects\n   */\n  getAllLocations() {\n    return fetch('/api/locations').then(res => res.json()).then(json => {\n      this.setState({\n        locations: json.data\n      });\n      return json.data;\n    }).catch(error => console.error('Error:', error));\n  }\n\n  /* {@func} onEditSubmit - Update an Employee object\n   * @params {Object} data an object containing the fields to update\n   * @return {Object} Array of objects\n   */\n  onEditSubmit(data) {\n    const endpoint = '/api/employees/' + data.id;\n    return fetch(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(response => console.log('Success')).catch(error => console.error('Error:', error));\n    this.getAllEmployees();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: () => React.createElement(Base, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/employees\",\n      component: () => React.createElement(List, {\n        list: this.state.employees,\n        locations: this.state.locations,\n        category: \"Employees\",\n        theme: \"color-Turq\",\n        onEditSubmit: this.onEditSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/locations\",\n      component: () => React.createElement(List, {\n        list: this.state.locations,\n        category: \"Locations\",\n        theme: \"colorGrass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/departments\",\n      component: () => React.createElement(List, {\n        list: this.state.departments,\n        category: \"Departments\",\n        theme: \"colorLime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/briana/workspace/employee-directory-web/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Header","Base","List","currDepartments","App","constructor","props","state","employees","locations","departments","isLoaded","getAllEmployees","bind","getAllLocations","componentDidMount","setState","loaded","fetch","then","res","json","data","catch","error","console","onEditSubmit","endpoint","id","method","body","JSON","stringify","headers","response","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;;AACA,OAAO,YAAP,C,CAEA;;AACA,MAAMC,eAAe,GAAG,CACtB,cADsB,EAEtB,cAFsB,EAGtB,cAHsB,CAAxB;;AAMA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAOA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,eAAL;AACA,SAAKE,eAAL;AACA,SAAKE,QAAL,CAAc;AACZC,MAAAA,MAAM,EAAE,IADI;AAEZP,MAAAA,WAAW,EAAEP;AAFD,KAAd;AAIA;AAEF;;;;;AAGCS,EAAAA,eAAe,GAAG;AAChB,WAAOM,KAAK,CAAC,gBAAD,CAAL,CACNC,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDE,IAAI,IAAI;AACZ,WAAKL,QAAL,CAAc;AACZR,QAAAA,SAAS,EAAEa,IAAI,CAACC;AADJ,OAAd;AAIA,aAAOD,IAAI,CAACC,IAAZ;AACD,KARM,EASNC,KATM,CASAC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CATT,CAAP;AAWD;;AAED;;;AAGAV,EAAAA,eAAe,GAAG;AAChB,WAAOI,KAAK,CAAC,gBAAD,CAAL,CACLC,IADK,CACAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADP,EAELF,IAFK,CAEAE,IAAI,IAAI;AACZ,WAAKL,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAEY,IAAI,CAACC;AADJ,OAAd;AAIA,aAAOD,IAAI,CAACC,IAAZ;AACD,KARK,EASLC,KATK,CASCC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CATV,CAAP;AAUA;;AAED;;;;AAIAE,EAAAA,YAAY,CAACJ,IAAD,EAAO;AACjB,UAAMK,QAAQ,GAAG,oBAAoBL,IAAI,CAACM,EAA1C;AAEA,WAAOV,KAAK,CAACS,QAAD,EAAW;AACnBE,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAFa;AAGnBW,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHU,KAAX,CAAL,CAOJd,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAQJF,IARI,CAQCe,QAAQ,IAAIT,OAAO,CAACU,GAAR,CAAY,SAAZ,CARb,EASJZ,KATI,CASEC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CATX,CAAP;AAUE,SAAKZ,eAAL;AACL;;AAEAwB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEM,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAE,MAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAE,MAAM,oBAAC,IAAD;AACxC,QAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWC,SADuB;AAExC,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAFkB;AAGxC,QAAA,QAAQ,EAAC,WAH+B;AAIxC,QAAA,KAAK,EAAC,YAJkC;AAKxC,QAAA,YAAY,EAAE,KAAKiB,YALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAaI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAE,MAAM,oBAAC,IAAD;AAClC,QAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWE,SADiB;AAElC,QAAA,QAAQ,EAAC,WAFyB;AAGlC,QAAA,KAAK,EAAC,YAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAoBU,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAE,MAAM,oBAAC,IAAD;AACtC,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,WADqB;AAEtC,QAAA,QAAQ,EAAC,aAF6B;AAGtC,QAAA,KAAK,EAAC,WAHgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBV,CADF;AA6BD;;AA3GuB;;AA8G5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// Internal js imports\nimport Header from './Components/Header';\nimport Base from './Components/Base';\nimport List from './Components/List';\n\n// Internal style imports\nimport './App.scss';\n\n// TODO: include department support in API\nconst currDepartments = [\n  'Department 1',\n  'Department 2',\n  'Department 3'\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      employees: [],\n      locations: [],\n      departments: [],\n      isLoaded: false,\n    };\n\n    this.getAllEmployees = this.getAllEmployees.bind(this);\n    this.getAllLocations = this.getAllLocations.bind(this);\n   };\n\n   componentDidMount() {\n     this.getAllEmployees();\n     this.getAllLocations();\n     this.setState({\n       loaded: true,\n       departments: currDepartments\n     });\n    }\n\n   /* {@func} getAllEmployees - fetches list of employees and updates the state\n    * @return {Object} Array of objects\n    */\n    getAllEmployees() {\n      return fetch('/api/employees')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          employees: json.data\n        });\n\n        return json.data;\n      })\n      .catch(error => console.error('Error:', error));\n\n    };\n\n    /* {@func} getAllLocations - fetches list of office locations and updates the state\n     * @return {Object} Array of objects\n     */\n    getAllLocations() {\n      return fetch('/api/locations')\n       .then(res => res.json())\n       .then(json => {\n         this.setState({\n           locations: json.data\n         })\n\n         return json.data;\n       })\n       .catch(error => console.error('Error:', error));\n     };\n\n     /* {@func} onEditSubmit - Update an Employee object\n      * @params {Object} data an object containing the fields to update\n      * @return {Object} Array of objects\n      */\n     onEditSubmit(data) {\n       const endpoint = '/api/employees/' + data.id;\n\n       return fetch(endpoint, {\n           method: 'PUT',\n           body: JSON.stringify(data),\n           headers: {\n             'Content-Type': 'application/json'\n           }\n         })\n         .then(res => res.json())\n         .then(response => console.log('Success'))\n         .catch(error => console.error('Error:', error));\n         this.getAllEmployees();\n   };\n\n    render() {\n      return (\n        <Router>\n            <Header />\n              <Route path=\"/\" component={() => <Base/>}\n              />\n            <Route path=\"/employees\" component={() => <List\n              list={this.state.employees}\n              locations={this.state.locations}\n              category=\"Employees\"\n              theme=\"color-Turq\"\n              onEditSubmit={this.onEditSubmit}\n              />}\n            />\n\n            <Route path=\"/locations\" component={() => <List\n                    list={this.state.locations}\n                    category=\"Locations\"\n                    theme=\"colorGrass\"\n                    />}\n                  />\n\n                  <Route path=\"/departments\" component={() => <List\n                        list={this.state.departments}\n                        category=\"Departments\"\n                        theme=\"colorLime\"\n                        />}\n                      />\n        </Router>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}