{"ast":null,"code":"var _jsxFileName = \"/Users/briana/workspace/employee-directory-web/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from './Components/Header';\nimport Base from './Components/Base';\nimport List from './Components/List';\nimport './App.scss';\nconst endpoint = '/api/allEmployees'; // To do: include departments in API call\n\nconst currDepartments = ['Department 1', 'Department 2', 'Department 3'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allEmployees: [],\n      locations: [],\n      departments: [],\n      isLoaded: false\n    };\n    this.getAllEmployees = this.getAllEmployees.bind(this);\n    this.getAllLocations = this.getAllLocations.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllEmployees();\n    this.getAllLocations();\n    this.setState({\n      loaded: true,\n      departments: currDepartments\n    });\n  }\n  /* {@func} getAllEmployees - fetches list of products and updates the state\n   * @return {Object} Array of objects\n   */\n\n\n  getAllEmployees() {\n    return fetch(endpoint).then(res => res.json()).then(json => {\n      this.setState({\n        allEmployees: json.data\n      });\n      return json.data;\n    });\n  }\n\n  getAllLocations() {\n    return fetch('/api/allLocations').then(res => res.json()).then(json => {\n      this.setState({\n        locations: json.data\n      });\n      return json.data;\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: () => React.createElement(Base, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/employees\",\n      component: () => React.createElement(List, {\n        list: this.state.allEmployees,\n        category: \"Employees\",\n        theme: \"color-Turq\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/locations\",\n      component: () => React.createElement(List, {\n        list: this.state.locations,\n        category: \"Locations\",\n        theme: \"colorGrass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/departments\",\n      component: () => React.createElement(List, {\n        list: this.state.departments,\n        category: \"Departments\",\n        theme: \"colorLime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/briana/workspace/employee-directory-web/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Header","Base","List","endpoint","currDepartments","App","constructor","props","state","allEmployees","locations","departments","isLoaded","getAllEmployees","bind","getAllLocations","componentDidMount","setState","loaded","fetch","then","res","json","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from './Components/Header';\nimport Base from './Components/Base';\nimport List from './Components/List';\n\n\nimport './App.scss';\n\nconst endpoint = '/api/allEmployees';\n\n// To do: include departments in API call\nconst currDepartments = ['Department 1', 'Department 2', 'Department 3'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allEmployees: [],\n      locations: [],\n      departments: [],\n      isLoaded: false,\n     };\n\n     this.getAllEmployees = this.getAllEmployees.bind(this);\n     this.getAllLocations = this.getAllLocations.bind(this);\n\n   };\n\n   componentDidMount() {\n     this.getAllEmployees();\n     this.getAllLocations();\n\n     this.setState({loaded: true, departments: currDepartments});\n    }\n\n   /* {@func} getAllEmployees - fetches list of products and updates the state\n    * @return {Object} Array of objects\n    */\n   getAllEmployees() {\n     return fetch(endpoint)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          allEmployees: json.data\n        });\n        return json.data;\n      });\n    };\n\n    getAllLocations() {\n      return fetch('/api/allLocations')\n       .then(res => res.json())\n       .then(json => {\n         this.setState({\n           locations: json.data\n         });\n         return json.data;\n       });\n     };\n\n    render() {\n      return (\n        <Router>\n            <Header />\n              <Route path=\"/\" component={() => <Base/>}\n              />\n            <Route path=\"/employees\" component={() => <List\n              list={this.state.allEmployees}\n              category=\"Employees\"\n              theme=\"color-Turq\"\n              />}\n            />\n\n            <Route path=\"/locations\" component={() => <List\n                    list={this.state.locations}\n                    category=\"Locations\"\n                    theme=\"colorGrass\"\n                    />}\n                  />\n\n                  <Route path=\"/departments\" component={() => <List\n                        list={this.state.departments}\n                        category=\"Departments\"\n                        theme=\"colorLime\"\n                        />}\n                      />\n        </Router>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}