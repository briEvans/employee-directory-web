{"ast":null,"code":"var _jsxFileName = \"/Users/briana/workspace/employee-directory-web/client/src/Components/Create.js\";\nimport React, { Component } from 'react';\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCreateMode: false\n    };\n    this.getAllEmployees = props.getAllEmployees.bind(this);\n    this.onCreate = this.onCreate.bind(this);\n    this.onCreateSubmit = this.onCreateSubmit.bind(this);\n  }\n\n  onCreate() {\n    this.setState({\n      isCreateMode: true\n    });\n  }\n\n  onCreateSubmit(ev) {\n    ev.preventDefault();\n    const newVals = {\n      name: this.nameInput.value,\n      position: this.positionInput.value,\n      email: this.emailInput.value,\n      phone: this.phoneInput.value,\n      location: this.locationInput.value,\n      image: this.uploadPhoto(this.genderInput.value)\n    };\n    this.props.onCreateSubmit(newVals);\n    this.props.getAllEmployees();\n    this.setState({\n      isCreateMode: false\n    });\n  }\n\n  // Mock photo uploads\n  uploadPhoto(gender) {\n    let url = 'https://randomuser.me/api/portraits/' + gender + '/' + Math.random(1, 50) + '.jpg';\n    return url;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.isCreateMode ? React.createElement(\"div\", {\n      className: \"employee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onCreateSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"employee-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"employee-name\",\n      placeholder: \"Name\",\n      ref: nameInput => this.nameInput = nameInput,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"employee-detail\",\n      placeholder: \"Position\",\n      ref: positionInput => this.positionInput = positionInput,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"employee-detail\",\n      placeholder: \"Email\",\n      ref: emailInput => this.emailInput = emailInput,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"employee-detail\",\n      placeholder: \"Phone\",\n      ref: phoneInput => this.phoneInput = phoneInput,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      className: \"employee-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.locations.map(location => React.createElement(\"option\", {\n      ref: locationInput => this.locationInput = locationInput,\n      defaultValue: location.name,\n      key: location.name,\n      value: location.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, location.name))), React.createElement(\"select\", {\n      className: \"employee-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      ref: genderInput => this.genderInput = genderInput,\n      value: \"male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Male\"), React.createElement(\"option\", {\n      ref: genderInput => this.genderInput = genderInput,\n      value: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Female\"))), React.createElement(\"button\", {\n      className: \"btn-crud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Create\"))) : React.createElement(\"div\", {\n      className: \"employee prototype\",\n      onClick: this.onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Create a new employee \")));\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["/Users/briana/workspace/employee-directory-web/client/src/Components/Create.js"],"names":["React","Component","Create","constructor","props","state","isCreateMode","getAllEmployees","bind","onCreate","onCreateSubmit","setState","ev","preventDefault","newVals","name","nameInput","value","position","positionInput","email","emailInput","phone","phoneInput","location","locationInput","image","uploadPhoto","genderInput","gender","url","Math","random","render","locations","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nclass Create extends Component {\n  constructor(props) {\n     super(props);\n\n     this.state = {\n       isCreateMode : false\n     }\n     this.getAllEmployees = props.getAllEmployees.bind(this);\n     this.onCreate = this.onCreate.bind(this);\n     this.onCreateSubmit = this.onCreateSubmit.bind(this);\n   };\n\n   onCreate() {\n     this.setState({ isCreateMode: true });\n   };\n\n   onCreateSubmit(ev) {\n     ev.preventDefault();\n\n     const newVals = {\n         name: this.nameInput.value,\n         position: this.positionInput.value,\n         email: this.emailInput.value,\n         phone: this.phoneInput.value,\n         location: this.locationInput.value,\n         image: this.uploadPhoto(this.genderInput.value)\n       };\n\n     this.props.onCreateSubmit(newVals);\n     this.props.getAllEmployees();\n     this.setState({isCreateMode: false});\n   };\n\n   // Mock photo uploads\n   uploadPhoto (gender) {\n     let url = 'https://randomuser.me/api/portraits/' + gender + '/' + Math.random(1,50) + '.jpg';\n     return url;\n   };\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.isCreateMode\n          ? (\n            <div className=\"employee\">\n              <form onSubmit={this.onCreateSubmit}>\n                <div className=\"employee-details\">\n\n                  <input className=\"employee-name\"\n                    placeholder=\"Name\"\n                    ref={nameInput => this.nameInput = nameInput}\n                    defaultValue=\"\"\n                  />\n\n                  <input className=\"employee-detail\"\n                    placeholder=\"Position\"\n                    ref={positionInput => this.positionInput = positionInput}\n                    defaultValue=\"\"\n                  />\n\n                  <input className=\"employee-detail\"\n                    placeholder=\"Email\"\n                    ref={emailInput => this.emailInput = emailInput}\n                    defaultValue=\"\"\n                  />\n\n                  <input className=\"employee-detail\"\n                    placeholder=\"Phone\"\n                    ref={phoneInput => this.phoneInput = phoneInput}\n                    defaultValue=\"\"\n                  />\n\n                  <select className=\"employee-detail\">\n                   {this.props.locations.map((location) =>\n                     <option\n                       ref={locationInput => this.locationInput = locationInput}\n                       defaultValue={location.name}\n                       key={location.name}\n                       value={location.name}>{location.name}\n                     </option>)}\n                  </select>\n\n                  <select className=\"employee-detail\">\n                    <option\n                      ref={genderInput => this.genderInput = genderInput}\n                      value=\"male\"> Male\n                    </option>\n\n                    <option\n                      ref={genderInput => this.genderInput = genderInput}\n                      value=\"female\"> Female\n                    </option>\n                  </select>\n                </div>\n                <button className=\"btn-crud\">Create</button>\n              </form>\n            </div>)\n          : (<div className=\"employee prototype\" onClick={this.onCreate}> <p>Create a new employee </p></div>)\n        }\n      </div>\n    );\n  };\n}\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}